/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectojunio;

import java.awt.HeadlessException;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 *
 * @author Antonio
 */
public class MainDialog extends javax.swing.JDialog {

    // He creado el contador para que empiece por la posicion 0 del ArrayList
    int contador = 0;
    Moviles movil = new Moviles();

    public MainDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        movil.a√±adirCaracteristicas();
        mostrarCaracteristicas();
        actualizar();
    }

    /**
     * Creo un metodo para que me muestre las caracteristicas de los moviles
     */
    private void mostrarCaracteristicas() {
        //Muestra las caracteristicas de los moviles en el JDialog
        jTextFieldMarca.setText(Moviles.caracteristicas.get(contador).getMarca());
        jTextFieldModelo.setText(Moviles.caracteristicas.get(contador).getModelo());
        jTextFieldCamara.setText(String.valueOf(Moviles.caracteristicas.get(contador).isCamara()));
        jTextFieldPantalla.setText(String.valueOf(Moviles.caracteristicas.get(contador).getPantalla()));
    }

    private void actualizar() {
        //Guardo las modificaciones que se hagan en el JDialog
        Moviles.caracteristicas.get(contador).setMarca(jTextFieldMarca.getText());
        Moviles.caracteristicas.get(contador).setModelo(jTextFieldModelo.getText());

        //Hago el bucle if para comparar con el string de la camara si es true o false para poder guardar la informacion
        if (jTextFieldCamara.getText().equals("true")) {
            Moviles.caracteristicas.get(contador).setCamara(true);
        } else {
            Moviles.caracteristicas.get(contador).setCamara(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldMarca = new javax.swing.JTextField();
        jTextFieldModelo = new javax.swing.JTextField();
        jTextFieldCamara = new javax.swing.JTextField();
        jTextFieldPantalla = new javax.swing.JTextField();
        jButtonIzquierda = new javax.swing.JButton();
        jButtonDerecha = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonNuevo = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jButtonXML = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButtonGuardarPos = new javax.swing.JButton();
        jTextFieldPosUno = new javax.swing.JTextField();
        jTextFieldPosDos = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });

        jLabel1.setText("Marca:");

        jLabel2.setText("Modelo:");

        jLabel3.setText("Camara:");

        jLabel4.setText("Pantalla:");

        jButtonIzquierda.setText("Anterior");
        jButtonIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzquierdaActionPerformed(evt);
            }
        });

        jButtonDerecha.setText("Posterior");
        jButtonDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDerechaActionPerformed(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonNuevo.setText("Nuevo");
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jButtonXML.setText("Importar XML");
        jButtonXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonXMLActionPerformed(evt);
            }
        });

        jButton1.setText("Exportar csv");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonGuardarPos.setText("Guardar Posicion");
        jButtonGuardarPos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarPosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonIzquierda)
                    .addComponent(jButtonModificar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonDerecha)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonXML)))
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldMarca, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .addComponent(jTextFieldModelo)
                    .addComponent(jTextFieldCamara)
                    .addComponent(jTextFieldPantalla))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldPosUno, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldPosDos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonGuardarPos))
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldPosUno, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldPosDos, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonGuardarPos)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldCamara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldPantalla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonIzquierda)
                    .addComponent(jButtonDerecha)
                    .addComponent(jButtonNuevo)
                    .addComponent(jButtonXML))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonModificar)
                    .addComponent(jButtonEliminar)
                    .addComponent(jButtonGuardar)
                    .addComponent(jButton1))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzquierdaActionPerformed
        if (contador > 0) {
            contador--;
        }
        mostrarCaracteristicas();
    }//GEN-LAST:event_jButtonIzquierdaActionPerformed

    private void jButtonDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDerechaActionPerformed
        if (contador < Moviles.caracteristicas.size() - 1) {
            contador++;
        }
        mostrarCaracteristicas();
    }//GEN-LAST:event_jButtonDerechaActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        actualizar();
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        jTextFieldMarca.setText("");
        jTextFieldModelo.setText("");
        jTextFieldCamara.setText("");
        jTextFieldPantalla.setText("");


    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowStateChanged

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        String marca = jTextFieldMarca.getText();
        String modelo = jTextFieldModelo.getText();
        String camara = jTextFieldCamara.getText();
        int pantalla = Integer.valueOf(jTextFieldPantalla.getText());
        //Creo una variable booleana para que recoja el String "true" y lo pase como boolean
        boolean camarita = false;
        if (camara.equals("true")) {
            camarita = true;
        }
        //A√±adimos los campos al Arraylist
        Moviles.caracteristicas.add(new Caracteristicas(marca, modelo, camarita, pantalla));


    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonXMLActionPerformed
        //Abre la ventana
        JFileChooser xml = new JFileChooser();
        //hace que se vean los directorios y los ficheros.
        xml.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        //si esta aceptado se ejecuta el if y si no aceptamos no entra dentro del bucle.
        if (xml.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            String ruta = xml.getSelectedFile().getAbsolutePath();
            //C:\Users\Antonio\Documents\NetBeansProjects\ProyectoJunio\Moviles.xml

            try {
                DocumentBuilderFactory fabricaCreadorDocumento = DocumentBuilderFactory.newInstance();
                DocumentBuilder creadorDocumento = fabricaCreadorDocumento.newDocumentBuilder();
                Document documento = (Document) creadorDocumento.parse(ruta);

                //Obtener el elemento ra√≠z del documento
                Element raiz = documento.getDocumentElement();

                // Obtener la lista de nodos que tienen etiqueta "MOVIL"
                NodeList listaMoviles = raiz.getElementsByTagName("MOVIL");

                //Recorrer la lista de moviles
                for (int i = 0; i < listaMoviles.getLength(); i++) {
                    //Obtener de la lista un movil tras otro
                    Node movil1 = listaMoviles.item(i);
                    Caracteristicas c = new Caracteristicas();
                    //Obtener la lista de los datos que contiene ese movil
                    NodeList datosMovil = movil1.getChildNodes();
                    //Recorrer la lista de los datos que contiene el movil
                    for (int j = 0; j < datosMovil.getLength(); j++) {
                        //Obtener de la lista de datos un dato tras otro
                        Node dato = datosMovil.item(j);

                        //Comprobar que el dato se trata de un nodo de tipo Element
                        if (dato.getNodeType() == Node.ELEMENT_NODE) {
                            //Mostrar el nombre del tipo de dato
                            if (dato.getNodeName().equalsIgnoreCase("Marca")) {
                                c.setMarca(dato.getFirstChild().getNodeValue());
                            }
                            if (dato.getNodeName().equalsIgnoreCase("Modelo")) {
                                c.setModelo(dato.getFirstChild().getNodeValue());
                            }
                            if (dato.getNodeName().equalsIgnoreCase("Camara")) {
                                String camara = dato.getFirstChild().getNodeValue();
                                //Creo una variable booleana para que recoja el String "true" y lo pase como boolean
                                boolean camarita = false;
                                if (camara.equals("true")) {
                                    camarita = true;
                                }
                                c.setCamara(camarita);
                            }
                            if (dato.getNodeName().equalsIgnoreCase("Pantalla")) {
                                c.setPantalla(Integer.valueOf(dato.getFirstChild().getNodeValue()));
                            }
                        }
                    }
                    //Guarda en las caracteristicas del movil el xml
                    Moviles.caracteristicas.add(c);
                }
            } catch (SAXException ex) {
                JOptionPane.showMessageDialog(this, "ERROR: El formato XML del fichero no es correcto");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "ERROR: Se ha producido un error el leer el fichero");
            } catch (ParserConfigurationException ex) {
                JOptionPane.showMessageDialog(this, "ERROR: No se ha podido crear el generador de documentos XML");

            }
        }
    }//GEN-LAST:event_jButtonXMLActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nombreFichero = "Rmoviles.txt";
        BufferedWriter bw = null;
        try {
            //Crea el archivo
            bw = new BufferedWriter(new FileWriter(nombreFichero));
            //Obtiene del arraylist las caracteristicas y las recorre con el bucle for
            for (int i = 0; i < Moviles.caracteristicas.size(); i++) {
                String texto;
                String marca = Moviles.caracteristicas.get(i).getMarca();
                String modelo = Moviles.caracteristicas.get(i).getModelo();
                int pantalla = Moviles.caracteristicas.get(i).getPantalla();
                boolean camara = Moviles.caracteristicas.get(i).isCamara();
                // Muestra en el archivo exportado la variable texto con todas las caracteristicas.
                texto = marca + "\t" + modelo + "\t" + camara + "\t" + pantalla + "\r\n";
                bw.write(texto);
            }
            JOptionPane.showMessageDialog(this, "Archivo creado con el nombre " + nombreFichero);
        } catch (IOException | HeadlessException e) {
            JOptionPane.showMessageDialog(this, "Error de escritura del fichero");
        } finally {
            try {
                //Cerrar el buffer
                if (bw != null) {
                    bw.close();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al cerrar el fichero");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
       //Borra el elemento que queramos del arrayList
        Moviles.caracteristicas.remove(contador);
       //refresca lo que hay en pantalla instantaneamente
        mostrarCaracteristicas();
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonGuardarPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarPosActionPerformed
        //Recoge los valores que le hemos insertado en los campos de texto
        int posUno = Integer.valueOf(jTextFieldPosUno.getText());
        int posDos = Integer.valueOf(jTextFieldPosDos.getText());
        //recoge un movil y lo almacena en la posicion indicada anteriormente
        Moviles.escaparate[posUno][posDos] = Moviles.caracteristicas.get(contador);        

    }//GEN-LAST:event_jButtonGuardarPosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainDialog dialog = new MainDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonDerecha;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonGuardarPos;
    private javax.swing.JButton jButtonIzquierda;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JButton jButtonXML;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextFieldCamara;
    private javax.swing.JTextField jTextFieldMarca;
    private javax.swing.JTextField jTextFieldModelo;
    private javax.swing.JTextField jTextFieldPantalla;
    private javax.swing.JTextField jTextFieldPosDos;
    private javax.swing.JTextField jTextFieldPosUno;
    // End of variables declaration//GEN-END:variables
}
