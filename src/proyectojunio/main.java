package proyectojunio;

import java.awt.Font;
import java.awt.Image;
import javax.swing.ImageIcon;

public class main extends javax.swing.JDialog {

    private final Moviles moviles = new Moviles();
    Font font = new Font("comic sans", Font.ITALIC, 12);

    public main(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        // Cargamos la imagen por codigo del boton Subir
        Image subir = new ImageIcon(this.getClass().getResource("/Imagenes/Subir.jpg")).getImage();
        subir = subir.getScaledInstance(25, 25, Image.SCALE_FAST);
        jButtonSubir.setIcon(new ImageIcon(subir));

        //Cargamos la imagen por codigo del boton Bajar
        Image bajar = new ImageIcon(this.getClass().getResource("/Imagenes/bajar.png")).getImage();
        bajar = bajar.getScaledInstance(25, 25, Image.SCALE_FAST);
        jButtonBajar.setIcon(new ImageIcon(bajar));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaMoviles = new javax.swing.JTextArea();
        jButtonMostrar = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButtonSubir = new javax.swing.JButton();
        jButtonBajar = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextAreaMoviles.setColumns(20);
        jTextAreaMoviles.setRows(5);
        jScrollPane1.setViewportView(jTextAreaMoviles);

        jButtonMostrar.setText("Mostrar");
        jButtonMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMostrarActionPerformed(evt);
            }
        });

        jButtonSubir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubirActionPerformed(evt);
            }
        });

        jButtonBajar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBajarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonSubir)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonMostrar))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBajar))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addComponent(jButtonSubir))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonMostrar)))
                .addGap(18, 18, 18)
                .addComponent(jButtonBajar)
                .addGap(103, 103, 103))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMostrarActionPerformed

        /*En un campo de texto (JTextField), el usuario podrá indicar un número que hará referencia a uno de los elementos del vector. También dispondrá de un botón "Subir" y otro "Bajar" que permitirán al usuario cambiar el orden de los elementos del array, subiendo o bajando el elemento indicado en el orden del vector. El cambio de orden se debe realizar en un método al que se le indique las 2 posiciones que se deben intercambiar del vector.

         Controla los límites del vector, para que no se pueda subir antes de la posición 0 ni bajar más allá del tamaño del array. Esto se debe controlar con un método que retorne si la posición indicada es correcta o no. Acuérdate añadir los comentarios necesarios en todo el código.

         Además asegúrate de que el usuario introduce un valor numérico entero, mostrando un mensaje de aviso en caso contrario.

         Ventanas de mensajes y confirmación 

         Cambia los textos de los botones "Subir" y "Bajar" por imágenes, realizando la asignación de la imagen desde el código fuente, no desde la vista de diseño de la ventana. Procura que las imágenes utilizadas se encuentren dentro de los paquetes de fuentes de tu proyecto en lugar de hacer referencia a ellas con la ruta completa de la carpeta en la que se encuentren dentro de tu ordenador. De esta manera asegurarás que los usuarios de tu aplicación vean las imágenes aunque se encuentren en otro ordenador. Indica en los comentarios del código de dónde has obtenido las imágenes, y en un archivo de texto colocado en la carpeta principal del proyecto indica las licencias que tienen las imágenes.

         Realiza alguna operación más a tu gusto sobre el array, realizando alguna consulta o modificación de los datos contenidos, procurando que tenga sentido con el tipo de información que se está manejando.

         Añade algún elemento más a la ventana que quede bien integrado en la aplicación o añade alguna nueva funcionalidad a los elementos ya existentes.*/
        jTextAreaMoviles.setText(moviles.Mostrar());

        jTextAreaMoviles.setFont(font);

    }//GEN-LAST:event_jButtonMostrarActionPerformed

    private void jButtonSubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubirActionPerformed
        int pos = Integer.valueOf(jTextField1.getText());
        moviles.Subir(pos);
        jTextAreaMoviles.setText(moviles.Mostrar());
    }//GEN-LAST:event_jButtonSubirActionPerformed

    private void jButtonBajarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBajarActionPerformed
        int pos = Integer.valueOf(jTextField1.getText());
        moviles.Bajar(pos);
        jTextAreaMoviles.setText(moviles.Mostrar());
    }//GEN-LAST:event_jButtonBajarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                main dialog = new main(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBajar;
    private javax.swing.JButton jButtonMostrar;
    private javax.swing.JButton jButtonSubir;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaMoviles;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
